training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
q()
library(ggplot2); library(randomForest); library(caret)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##clean datasets
getFeaturedData<- function(inData) {
inData$Age[is.na(inData$Age)] <- -1
inData$Fare[is.na(inData$Fare)] <- median(inData$Fare,na.rm = TRUE)
inData$Embarked[inData$Embarked==''] <- 'S'
feature_fields <- c("Pclass",
"Sex",
"Age",
"SibSp",
"Parch",
"Fare",
"Embarked")
outData <- inData[,feature_fields]
return(outData)
}
set.seed(312)
names(training)
getFeaturedData<- function(inData) {
inData$Age[is.na(inData$Age)] <- -1
inData$Fare[is.na(inData$Fare)] <- median(inData$Fare,na.rm = TRUE)
inData$Embarked[inData$Embarked==''] <- 'S'
feature_fields <- c("Pclass",
"Sex",
"Age",
"SibSp",
"Parch",
"Fare",
"Embarked","Survived")
outData <- inData[,feature_fields]
return(outData)
}
set.seed(312)
model1 <- train(Survived ~., data = getFeaturedData(training), method="rf",proxy=FALSE)
pred1 <- predict(model1,getFeaturedData(training))
table(pred1, training$Survived)
c(pred1, training$Survived)
rbind(pred1, training$Survived)
ccc <-cbind(pred1, training$Survived)
View(ccc)
View(ccc)
model1 <- train(factor(Survived) ~., data = getFeaturedData(training), method="rf",proxy=FALSE)
pred1 <- predict(model1,getFeaturedData(training))
table(pred1,training$Survived)
training2 <-read.csv("train.csv", header=TRUE, sep = ",")
names(training2)
training2$Name[is.na(training2$Sex),]
training2[is.na(training2$Sex),]$Names
View(training2)
View(training2)
submit <- data.frame(PassengerId = testing$PassengerId)
submit$Survived <- pred1
pred1 <- predict(model1,getFeaturedData(testing))
submit <- data.frame(PassengerId = testing$PassengerId)
submit$Survived <- pred1
pred1 <- predict(model1,getFeaturedData(testing))
trainData <- cbind(getFeaturedData(training),training$Survived)
names(trainData)
names(trainData[,9])
names(trainData)
cbind(names(trainData),"Survived")
rbind(names(trainData),"Survived")
names(trainData)[9]
names(trainData)[9] <- "Survived"
names(trainData)
## load libraries
library(ggplot2); library(randomForest); library(caret)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##clean datasets
getFeaturedData<- function(inData) {
inData$Age[is.na(inData$Age)] <- -1
inData$Fare[is.na(inData$Fare)] <- median(inData$Fare,na.rm = TRUE)
inData$Embarked[inData$Embarked==''] <- 'S'
feature_fields <- c("Pclass",
"Sex",
"Age",
"SibSp",
"Parch",
"Fare",
"Embarked")
outData <- inData[,feature_fields]
return(outData)
}
set.seed(312)
names(trainData)
trainData <- cbind(getFeaturedData(training),training$Survived)
names(trainData)
names(trainData)[9] <- "Survived"
names(trainData)[8] <- "Survived"
names(trainData)
model1 <- train(factor(Survived) ~., data =trainData , method="rf",proxy=FALSE)
pred1 <- predict(model1,getFeaturedData(testing))
submit <- data.frame(PassengerId = testing$PassengerId)
submit$Survived <- pred1
View(submit)
write.csv(submit, file = "titanic_survive_rf_v01.csv", row.names=FALSE)
rm(list=ls())
library(ggplot2); library(randomForest); library(caret)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
rm(list=ls())
## load libraries
library(ggplot2); library(randomForest); library(caret)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
ggcorplot(
data = training,
var_text_size = 5,
cor_text_limits = c(5,10))
install.packages("ggcorrplot")
library(ggcorrplot)
ggcorplot(
data = training,
var_text_size = 5,
cor_text_limits = c(5,10))
library(ggcorrplot)
library(ggcorrplot)
ggcorplot(
data = training,
var_text_size = 5,
cor_text_limits = c(5,10))
ggcorrplot(
data = training,
var_text_size = 5,
cor_text_limits = c(5,10))
ggcorrplot(
data = training,
var_text_size = 5)
ggcorrplot(
data = training)
library(car)
library(car)
scatterplotMatrix(training)
## load libraries
library(ggplot2); library(randomForest); library(caret)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##clean datasets
getFeaturedData<- function(inData) {
inData$Age[is.na(inData$Age)] <- median(inData$Age,na.rm = TRUE)
inData$Fare[is.na(inData$Fare)] <- median(inData$Fare,na.rm = TRUE)
inData$Embarked[inData$Embarked==''] <- 'S'
feature_fields <- c("Pclass","Sex","Age","SibSp","Parch","Fare","Embarked")
outData <- inData[,feature_fields]
return(outData)
}
set.seed(312)
trainData <- cbind(getFeaturedData(training),training$Survived)
names(trainData)[8] <- "Survived"
model1 <- train(factor(Survived) ~., data =trainData , method="rf",proxy=FALSE)
pred1 <- predict(model1,getFeaturedData(training))
table(pred1,training$Survived)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##clean datasets
getFeaturedData<- function(inData) {
inData$Age[is.na(inData$Age)] <- -1 #median(inData$Age,na.rm = TRUE)
inData$Fare[is.na(inData$Fare)] <- median(inData$Fare,na.rm = TRUE)
inData$Embarked[inData$Embarked==''] <- 'S'
inData$Embarked <- as.factor(inData$Embarked)
inData$Sex <-as.factor(inData$Sex)
feature_fields <- c("Pclass","Sex","Age","SibSp","Parch","Fare","Embarked")
outData <- inData[,feature_fields]
return(outData)
}
set.seed(312)
trainData <- cbind(getFeaturedData(training),training$Survived)
names(trainData)[8] <- "Survived"
model1 <- train(factor(Survived) ~., data =trainData , method="rf",proxy=FALSE)
pred1 <- predict(model1,getFeaturedData(training))
table(pred1,training$Survived)
model1 <- train(factor(Survived) ~., data =trainData , method="rf",importance = TRUE,proxy=FALSE)
pred1 <- predict(model1,getFeaturedData(training))
table(pred1,training$Survived)
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=100, importance=TRUE)
pred2<- predict(rf,getFeaturedData(training))
table(pred2,training$Survived)
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=200, importance=TRUE)
pred2<- predict(rf,getFeaturedData(training))
table(pred2,training$Survived)
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), importance=TRUE)
pred2<- predict(rf,getFeaturedData(training))
table(pred2,training$Survived)
pred2<- predict(rf,getFeaturedData(testing))
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
set.seed(312)
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=100, importance=TRUE)
pred2<- predict(rf,getFeaturedData(testing))
names(testing)
names(getFeaturedData(training))
names(getFeaturedData(testing))
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=100, importance=TRUE)
pred2<- predict(rf,getFeaturedData(testing))
pred1 <- predict(model1,getFeaturedData(testing))
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=100, importance=TRUE)
pred2<- predict(rf,getFeaturedData(testing))
tt <- getFeaturedData(testing)
names(tt)
unique(tt$Pclass)
unique(tt$Sex)
table(tt$Sex)
table(tt$Age)
table(tt$SibSp)
table(tt$Fare)
table(tt$Embarked)
sum(is.na(tt))
pred2<- predict(rf,tt)
pred2<- predict(rf,getFeaturedData(training))
table(pred2,training$Survived)
##clean datasets
getFeaturedData<- function(inData) {
feature_fields <- c("Pclass","Sex","Age","SibSp","Parch","Fare","Embarked")
outData <- inData[,feature_fields]
outData$Age[is.na(outData$Age)] <- -1 #median(outData$Age,na.rm = TRUE)
outData$Fare[is.na(outData$Fare)] <- median(outData$Fare,na.rm = TRUE)
outData$Embarked[outData$Embarked==''] <- 'S'
outData$Embarked <- as.factor(outData$Embarked)
outData$Sex <-as.factor(outData$Sex)
return(outData)
}
set.seed(312)
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=100, importance=TRUE)
pred2<- predict(rf,getFeaturedData(training))
table(pred2,training$Survived)
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=100, importance=TRUE)
pred2<- predict(rf,getFeaturedData(training))
table(pred2,training$Survived)
pred2<- predict(rf,getFeaturedData(testing))
pred2<- predict(rf,getFeaturedData(testing))
rm(list=ls())
## load libraries
library(ggplot2); library(randomForest); library(caret)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##clean datasets
getFeaturedData<- function(inData) {
feature_fields <- c("Pclass","Sex","Age","SibSp","Parch","Fare","Embarked")
outData <- inData[,feature_fields]
outData$Age[is.na(outData$Age)] <- -1 #median(outData$Age,na.rm = TRUE)
outData$Fare[is.na(outData$Fare)] <- median(outData$Fare,na.rm = TRUE)
outData$Embarked[outData$Embarked==''] <- 'S'
outData$Embarked <- as.factor(outData$Embarked)
outData$Sex <-as.factor(outData$Sex)
return(outData)
}
###################################
set.seed(312)
rf <- randomForest(getFeaturedData(training), as.factor(training$Survived), ntree=100, importance=TRUE)
pred2<- predict(rf,getFeaturedData(testing))
str(training)
str(testing)
table(training$Pclass); table(testing$Pclass)
table(training$Sex); table(testing$Sex)
table(training$Sibsp); table(testing$SibSp)
unique(training$SibSp)
table(training$SibSp); table(testing$SibSp)
table(training$Parch); table(testing$Parch)
levels(training$Parch) <- levels(testing$Parch)
table(training$Parch); table(testing$Parch)
levels(training$Parch)
levels(testing$Parch)
head(totaldata)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##combine data sets
totaldata <- rbind(training,testing)
##clean datasets
getFeaturedData<- function(inData) {
feature_fields <- c("Pclass","Sex","Age","SibSp","Parch","Fare","Embarked")
outData <- inData[,feature_fields]
outData$Age[is.na(outData$Age)] <- -1 #median(outData$Age,na.rm = TRUE)
outData$Fare[is.na(outData$Fare)] <- median(outData$Fare,na.rm = TRUE)
outData$Embarked[outData$Embarked==''] <- 'S'
outData$Embarked <- as.factor(outData$Embarked)
outData$Sex <-as.factor(outData$Sex)
return(outData)
}
set.seed(232)
totaldata <- rbind(training,testing)
totaldata <- bind_rows(training,testing)
library(dplyr)
totaldata <- bind_rows(training,testing)
library(dplyr)
totaldata <- bind_rows(training,testing)
head(totaldata)
head(training)
getFeaturedData<- function(inData) {
feature_fields <- c("Pclass","Sex","Age","SibSp","Parch","Fare","Embarked")
outData <- inData[,feature_fields]
outData$Age[is.na(outData$Age)] <- -1 #median(outData$Age,na.rm = TRUE)
outData$Fare[is.na(outData$Fare)] <- median(outData$Fare,na.rm = TRUE)
outData$Embarked[outData$Embarked==''] <- 'S'
outData$Embarked <- as.factor(outData$Embarked)
outData$Sex <-as.factor(outData$Sex)
return(outData)
}
set.seed(232)
rf <- randomForest(getFeaturedData(totaldata), as.factor(totaldata$Survived), ntree=100, importance=TRUE)
sum(is.na(totaldata))
View(totaldata)
names(totaldata)
dim(training)
post_totaldata <- getFeaturedData(totaldata)
traind <- post_totaldata[!is.na(post_totaldata$Survived),]
testd <- post_totaldata[is.na(post_totaldata$Survived),]
traind <- post_totaldata[!is.null(post_totaldata$Survived),]
testd <- post_totaldata[is.null(post_totaldata$Survived),]
dim(traind)
dim(testd)
## load libraries
library(ggplot2); library(randomForest); library(caret);library(dplyr)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##combine data sets
totaldata <- bind_rows(training,testing)
str(totaldata)
names(totaldata)
sum(is.na(totaldata$PassengerId))
sum(is.na(totaldata$Pclass))
sum(is.na(totaldata$Sex))
sum(is.na(totaldata$Age))
sum(is.na(totaldata$SibSp))
sum(is.na(totaldata$Parch))
sum(is.na(totaldata$Ticket))
sum(is.na(totaldata$Fare))
sum(is.na(totaldata$Cabin))
sum(is.na(totaldata$Embarked))
sum(is.null(totaldata$Embarked))
totaldata[is.na(totaldata),]
totaldata[is.na(totaldata$Fare),]
totaldata[is.na(totaldata$Fare),]$Fare
totaldata[is.na(totaldata$Fare),]$Fare <- median(totaldata$Fare,na.rm=TRUE)
totaldata[is.na(totaldata$Fare),]
totaldata[is.na(totaldata$Embarked),]
totaldata[is.null(totaldata$Embarked),]
totaldata[is.empty(totaldata$Embarked),]
totaldata[totaldata$Embarked=='',]
totaldata[totaldata$Embarked=='',Fare:Embarked]
totaldata[totaldata$Embarked=='',c(Fare:Embarked)]
table(totaldata$Embarked)
totaldata[totaldata$Embarked=='',]$Embarked <- 'S'
totaldata[totaldata$Embarked=='',]
totaldata[totaldata$Embarked=='',]$Embarked <- 'C'
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##combine data sets
totaldata <- bind_rows(training,testing)
names(totaldata)
##[1] "PassengerId" "Survived"    "Pclass"      "Name"        "Sex"         "Age"         "SibSp"
##[8] "Parch"       "Ticket"      "Fare"        "Cabin"       "Embarked"
## fields with NA value : Age(263) ; Fare (1) ;
totaldata[is.na(totaldata$Fare),]$Fare <- median(totaldata$Fare,na.rm=TRUE)
totaldata[totaldata$Embarked=='',]$Embarked <- 'C'
install.packages("mice")
library(mice)
ft_var <- c('PassengerId','Pclass','Sex','Embarked')
totaldata[ft_var] <- lapply(totaldata[ft_var], function(x) as.factor(x))
set.seed(234)
mice_mod <- mice(totaldata[, names(totaldata) %in% ft_var], method='rf')
str(totaldata)
ft_var <- c('PassengerId','Pclass','Sex','Embarked')
totaldata[ft_var] <- lapply(totaldata[ft_var], function(x) as.factor(x))
set.seed(234)
mice_mod <- mice(totaldata[, !names(totaldata) %in% c('PassengerId','Name','Ticket','Cabin','Survived')], method='rf')
mice_output <- complete(mice_mod)
mice_output
hist(mice_output$Age)
totaldata[890:893,]
totaldata$Age <- mice_output$Age
trainfinal <- totaldata[1:891,]
testfinal <- totaldata[892:1309,]
set.seed(556)
rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked,data = train)
set.seed(556)
rf_model <- randomForest(factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch +
Fare + Embarked,data = trainfinal)
plot(rf_model, ylim=c(0,0.36))
legend('topright', colnames(rf_model$err.rate), col=1:3, fill=1:3)
prd <- predict(rf_model,trainfinal)
prd <- predict(rf_model,trainfinal)
confusionMatrix(prd,testfinal$Survived)
confusionMatrix(prd,trainfinal$Survived)
prdfinal <- predict(rf_model,testfinal)
submit <- data.frame(PassengerId = testfinal$PassengerId)
submit$Survived <- prdfinal
write.csv(submit, file = "titanic_survive_rf_v02.csv", row.names=FALSE)
# load libraries
library(ggplot2); library(randomForest); library(caret);library(dplyr);library(mice)
##load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
##combine data sets
totaldata <- bind_rows(training,testing)
head(totaldata)
sub(".*,","","Braund, Mr. Owen")
sub(".*","","Braund, Mr. Owen")
sub("^*,","","Braund, Mr. Owen")
sub("^,*","","Braund, Mr. Owen")
sub("^,*.","","Braund, Mr. Owen")
sub(",*.","","Braund, Mr. Owen")
sub("*,.","","Braund, Mr. Owen")
unlist(strsplit("Braund, Mr. Owen", ' '))
unlist(strsplit("Braund, Mr. Owen", ' '))[1]
unlist(strsplit("Braund, Mr. Owen", ' '))[2]
gsub(" .*$","","Braund, Mr. Owen")
gsub(" .*,","","Braund, Mr. Owen")
gsub(" .*,$",","","Braund, Mr. Owen")
gsub(" .*$",","","Braund, Mr. Owen")
gsub("^,$",","","Braund, Mr. Owen")
gsub(".*^,$",","","Braund, Mr. Owen")
q()
strsplit("Braund, Mr.en Harris",",")
# load libraries
library(ggplot2); library(randomForest); library(caret);library(dplyr);library(mice)
#load datasets
training <-read.csv("train.csv", header=TRUE, sep = ",")
testing  <-read.csv("test.csv", header=TRUE, sep = ",")
#combine data sets
totaldata <- bind_rows(training,testing)
head(totaldata)
#PassengerId Survived Pclass                                                Name    Sex   Age SibSp Parch           Ticket    Fare Cabin Embarked
#(int)    (int)  (int)                                               (chr) (fctr) (dbl) (int) (int)            (chr)   (dbl) (chr)    (chr)
#1           1        0      3                             Braund, Mr.en Harris   male    22     1     0        A/5 21171  7.2500              S
#2           2        1      1 Cumings, Mrs. John Bradley (Florence Briggs Thayer) female    38     1     0         PC 17599 71.2833   C85        C
#3           3        1      3                              Heikkinen, Miss. Laina female    26     0     0 STON/O2. 3101282  7.9250              S
#4           4        1      1        Futrelle, Mrs. Jacques Heath (Lily May Peel) female    35     1     0           113803 53.1000  C123        S
#5           5        0      3                            Allen, Mr. William Henry   male    35     0     0           373450  8.0500              S
#6           6        0      3                                    Moran, Mr. James   male    NA     0     0           330877  8.4583              Q
names(totaldata)
##[1] "PassengerId" "Survived"    "Pclass"      "Name"        "Sex"         "Age"         "SibSp"
##[8] "Parch"       "Ticket"      "Fare"        "Cabin"       "Embarked"
## fields with NA value : Age(263) ; Fare (1) ;Embarked
pas_names <- totaldata$Name
strsplit("Braund, Mr.en Harris",",")
strsplit("Braund, Mr.en Harris",",")[1]
strsplit("Braund, Mr.en Harris",",")[[1]
]
pr<-strsplit("Braund, Mr.en Harris",",")[1]
pr
pr[1]
pr$1
pr[1,1]
dim(pr)
pr
pr[[1]][1]
f_name <- strsplit(f_name,",")[[1]][1]
f_name <- strsplit(pas_names,",")[[1]][1]
dim(pas_names)
size(pas_names)
dim(pas_names,1)
f_name <- strsplit(pas_names,",")[[1:1309]][1]
pr
str(pr)
f_name <- strsplit(pas_names,",")
View(f_name)
f_name[[1]][1]
f_name[1]
f_name[[1]
]
f_name[[1]]
f_name[1:23]
f_name[1:23][1]
f_name[[1:23]][1]
f_name[[1:23]][1]
f_name[[1:23]]
f_name[1:23]
f_name[1:23][[1]]
f_name <- lapply(pas_names,function(x) strsplit(x,",")[[1]][1])
f_names
f_name
dim(f_name)
str(f_name)
f_name[1]
f_name[2]
f_name1 <- as.data.frame(f_name)
f_names1
f_name1
dim(f_name1)
f_name1[1]
f_name1[2]
matrix(f_name1)
f_name1[1:3]
t(matrix(f_name1[1:3])
)
t(f_name1[1:3])
pas_names <- totaldata$Name
f_name <- lapply(pas_names,function(x) strsplit(x,",")[[1]][1])
f_name1 <- as.data.frame(f_name)
f_name1 <- t(f_name1)
unique(f_name1)
dim(f_name1)
dim(unique(f_name1)
)
str_count(f_name1,unique(f_name1))
library(stringr)
str_count(f_name1,unique(f_name1))
